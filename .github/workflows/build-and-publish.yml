name: Build and Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
    - name: Bundle and Minimize with esbuild
      run: npx esbuild src/index.js --bundle --minify --outfile=dist/index.js
    - name: Copy package.json to dist (for publishing)
      run: cp package.json dist/
    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: publishing-artifacts
        path: dist

  publish-to-github:
    needs: build
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        registry-url: 'https://npm.pkg.github.com/'
    - name: Download built artifacts
      uses: actions/download-artifact@v4
      with:
        name: publishing-artifacts
        path: dist
    - name: Update Package Name To Follow Scope Naming
      run: cd dist && npm pkg set name="@$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')/$(npm pkg get name | jq -r .)"
    - name: Semantic Release
      run: cd dist && npx semantic-release --branches main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # publish-to-npm:
  #   needs: build
  #   permissions:
  #     contents: write
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Setup Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: 20.x
  #   - name: Download built artifacts
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: publishing-artifacts
  #       path: dist
  #   - name: Semantic Release
  #     run: cd dist && npx semantic-release --branches main
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
